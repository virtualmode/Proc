' https://plantuml.com/sitemap-language-specification

@startuml Proc

/'
    owners feed pets, pets please owners (association)
    a tail is a part of both dogs and cats (aggregation / composition)
    a cat is a kind of pet (inheritance / generalization)
    specific pet is a cat (specialization)
    Extension?
'/

class EscapeContainer
{
    Для систем с праймерами
    скомпилированный код не
    должен совпадать ни с
    одним из них, поэтому
    контейнер необходим для
    экранирования.
    '..
    '--
    '==
    '__
    '-private_field
    '#protected_field
    '~package_private
    '__
    '+public_method()
}

class DeviceStream << Fake, Token >>
{
    Платформозависимые
    реализации реальных
    носителей информации
    вычислителя.
    .. Реализации ..
    MemoryStream
    NewMemoryStream
    __
}

interface Stream << Fake >>
{
    Интерфейсы для работы
    с потоками состояний.
}

DeviceStream --|> Stream

class Utf8 << Token, string? >>
{
    Поток UTF-8
    формата Юникода.
}

class UnknownEncoding << Token >>
{
    Реализация потока
    неизвестного алфавита.
}

interface UnknownStream << Fake >>
{
    Интерфейсы для работы
    с потоками кодов
    неизвестного алфавита.
}

interface UnicodeStream << Fake >>
{
    Интерфейсы для работы
    с потоками кодов символов
    Юникода.
}

Utf8 o-- Stream
UnknownEncoding o-- Stream

Utf8 --|> UnicodeStream
UnknownEncoding --|> UnknownStream

class SymbolToken << Token >>
{
    SymbolToken может быть
    целесообразен, т.к.
    текстовые языки похожи,
    но часть нагрузки ляжет на
    синтаксический анализатор.
}

UnicodeStream --o SymbolToken

class UnknownToken << Token >>
{
}

UnknownStream --o UnknownToken
UnknownStream --o "?     " SymbolToken

class Amd64Token << Token >>
{
}

Stream --o Amd64Token

class ArmToken << Token >>
{
}

Stream --o ArmToken

class DnaToken << Token >>
{
}

Stream --o DnaToken

class SymbolTable
{
}

SymbolToken *-- SymbolTable

class JavaScript << Syntax >>
{
}

class Proc << Syntax >>
{
}

JavaScript o-- SymbolTable
Proc o-- SymbolTable

class Amd64 << Syntax >>
{
}

class Arm << Syntax >>
{
}

class Dna << Syntax >>
{
}

class Unknown << Syntax >>
{
}

SymbolToken --o JavaScript
SymbolToken --o Proc
Amd64Token --o Amd64
ArmToken --o Arm
DnaToken --o Dna
UnknownToken --o Unknown

class Statement << AST >>
{
}

JavaScript --o Statement
Proc --o Statement
Amd64 --o Statement
Arm --o Statement
Dna --o Statement
Unknown --o Statement

@enduml
