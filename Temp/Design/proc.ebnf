(* Wirth Extended Backus-Naur Form of Proc
http://www.cs.man.ac.uk/~pjj/bnf/ebnf.html
https://certitude.consulting/blog/en/invisible-backdoor/ *)

(* Any other characters to extend language *)
         OtherLetter = ∅.
          OtherDigit = ∅.

(* Base language characters *)
         LatinLetter = "A" | "B" | ... | "Z" | "a" | "b" | ... | "z".
        DecimalDigit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9".

(* Proc letters and digits *)
              Letter = LatinLetter | OtherLetter | OtherDigit.
               Digit = DecimalDigit | LatinLetter.

(* Language strings *)
           Character = Letter | Digit.
                Char = "'" { Char } "'".
              String = "\"" { Char } "\"".
              Number = { Digit }.

(* Proc syntax *)
          Identifier = Letter { Letter | Digit }.
           Statement = { Assignment } |
                       { IfStatement } |
                       { CaseStatement } |
                       { WhileStatement } |
                       { DoWhileStatement } |
                       { ForStatement } |
                       { Call }.

                Type = Number { "[" Number "]" } | Identifier.
                Cast = "(" Type ")".
      AccessModifier = "private" | "protected" | "public".

         Declaration = [ AccessModifier ] [ "static" | "const" ] Type Identifier [ "=" Expression ]

 ConstantDeclaration = [ AccessModifier ] "const" Type Identifier "=" ConstantExpression.
 VariableDeclaration = (* Здесь надо подумать о области видимости переменных в функции *)

         Declaration = { ConstantDeclaration }
                       { FieldDeclaration }
                       { FunctionDeclaration }
                       { ClassDeclaration }

(* Many programming languages make a distinction between statements and definitions/declarations but not this *)
               Scope = { Statement }

(* Goal of process is a top scope *)
                Goal = Scope
                Proc = Goal
