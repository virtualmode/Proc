/* Parsing expression grammar (PEG) of Proc
Wirth Extended Backus-Naur Form of Proc
http://www.cs.man.ac.uk/~pjj/bnf/ebnf.html */

{
    parserClass="proc.parser.ProcParser"
    //parserUtilClass="proc.parser.ProcParserUtil"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Proc"
    psiPackage="proc.psi"
    psiImplClassSuffix="Impl"
    psiImplPackage="proc.psi.impl"
    //psiImplUtilClass="proc.psi.impl.ProcPsiImplUtil"

    elementTypeHolderClass="proc.psi.SymbolType"
    elementTypeClass="proc.psi.ProcElementType"
    tokenTypeClass="proc.psi.ProcTokenType"
    //elementTypeFactory("typeDecl|classDecl|accessModifier")="proc.psi.ProcElementTypeFactory.factory"
}

// Goal of process is a top scope.
Proc ::= Goal
Goal ::= Scope

// Many programming languages make a distinction between statements and definitions/declarations but not this.
Scope ::= Statement*

Statement ::= WHITE_SPACE | AccessModifier | COMMENT | NEWLINE

AccessModifier ::= PRIVATE | PROTECTED | PUBLIC

/*
procFile ::= item_*

private item_ ::= (property|COMMENT|CRLF)

property ::= (KEY? SEPARATOR VALUE?) | KEY
*/
