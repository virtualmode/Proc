// Интерфейс работы с токеном символа определённой кодировки.
interface Proc.Text.Char

	// Поток состояний со значением кода символа в реализуемой кодировке.
	// Код символа фиксированного размера для внутреннего использования?
	readonly var Value

	// Тип токена.
	readonly Type Type

	// Является ли текущий символ строчной буквой.
	bool IsSmallLetter()

	// Является ли текущий символ заглавной буквой.
	bool IsCapitalLetter()

	// Является ли текущий символ буквой.
	bool IsLetter()

	// Является ли текущий символ индо-арабской десятичной цифрой.
	bool IsDecimalDigit()

	// Является ли текущий символ строчной латинской буквой.
	bool IsSmallLatinLetter()

	// Является ли текущий символ заглавной латинской буквой.
	bool IsCapitalLatinLetter()

	// Является ли текущий символ латинской буквой.
	bool IsLatinLetter()

	#region Черновик

	// Символ относится к группе допустимых разделителей, используемых в компиляторе.
	//@Deprecated("Достаточно специфическая реализация для использования в таком виде.")
	//fun IsDelimiter(): Boolean

	// Символ является разделителем строк или входит в последовательность разделения.
	@Deprecated("Название не совсем соответствует действительности.")
	fun IsEndOfLine(): Boolean

	// Символ является отступом.
	@Deprecated("Достаточно специфическая реализация для использования в таком виде.")
	fun IsWhitespace(): Boolean

	#endregion
