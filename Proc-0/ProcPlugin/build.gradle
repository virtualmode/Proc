import org.jetbrains.grammarkit.tasks.*

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'org.jetbrains.intellij' version '1.3.1'
    id 'org.jetbrains.grammarkit' version '2021.1.3'
    id 'java'
    id 'idea'
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'

group 'proc'
version '2022.3.7'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.21'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

intellij {
    version = '2021.3.2'
    plugins = ['java', 'gradle', 'gradle-java']
}

patchPluginXml {
}

test {
    useJUnitPlatform()
}

task generateProcLexer(type: GenerateLexer) {
    source = 'src/main/java/proc/Proc.flex'
    targetDir = 'src/gen/proc/'
    targetClass = 'ProcLexer'
    purgeOldFiles = true
}

task generateProcParser(type: GenerateParser) {
    source = 'src/main/java/proc/Proc.bnf'
    targetRoot = 'src/gen'
    pathToParser = '/proc/parser/ProcParser.java'
    pathToPsiRoot = '/proc/psi'
    purgeOldFiles = true
}

compileKotlin {
    dependsOn generateProcParser
    dependsOn generateProcLexer
}

compileJava {
    dependsOn generateProcParser
    dependsOn generateProcLexer
}

sourceSets.main.java.srcDirs 'src/gen'
